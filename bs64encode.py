# meta developer: @LolDecMods
# scope: hikka_min 1.6.2

import base64
from hikkatl.types import Message

from .. import loader, utils  # type: ignore


@loader.tds
class bssh(loader.Module):
    """–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —à–∏—Ñ—Ä bs64 –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç"""

    strings = {"name": "bs64 coder"}
    strings_ru = {"name": "bs64 —à–∏—Ñ—Ä–∞—Ç–æ—Ä"}

    @loader.command(alias="code", ru_doc="| –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ Base64")
    async def cod64cmd(self, m: Message):
        """| –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç Base64"""
        text_to_encode = m.text.split(" ", 1)[1]
        encoded_text = base64.b64encode(text_to_encode.encode()).decode()
        await utils.answer(m, f"| <emoji document_id=5352784961814405440>‚ö°Ô∏è</emoji> |\n –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n<code>{encoded_text}</code>\n| <emoji document_id=5352784961814405440>‚ö°Ô∏è</emoji> |")

    @loader.command(alias="decode", ru_doc="| –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç Base64")
    async def dcd64cmd(self, m: Message):
        """| –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç Base64"""
        text_to_decode = m.text.split(" ", 1)[1]
        try:
            decoded_text = base64.b64decode(text_to_decode).decode()
            await utils.answer(m, f"| <emoji document_id=5242365016241352434>üî±</emoji> |\n –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n<code>{decoded_text}</code>\n| <emoji document_id=5242365016241352434>üî±</emoji> |")
        except Exception as e:
            await utils.answer(m, f"| <emoji document_id=5440409175190415592>‚ùåÔ∏è</emoji> | –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)} | <emoji document_id=5440409175190415592>‚ùåÔ∏è</emoji> |")